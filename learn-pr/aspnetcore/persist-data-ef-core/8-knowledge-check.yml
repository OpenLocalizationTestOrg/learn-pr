### YamlMime:ModuleUnit
uid: learn.persist-data-ef-core.8-knowledge-check
metadata:
  title: Knowledge check
  description: Knowledge Check - Persist Data with EF Core
  ms.date: 04/20/2019
  author: scottaddie
  ms.author: scaddie
  ms.topic: interactive-tutorial
  ms.prod: learning-aspnetcore
  ROBOTS: NOINDEX
title: Knowledge check
durationInMinutes: 5
content: |
quiz:
  title: Check your knowledge
  questions:
    - content: "In an entity class, what is the property naming convention for a primary key?"
      choices:
      - content: "`Key` or `<entity name>Key`"
        isCorrect: false
        explanation: "`Key` and the `Key` suffix aren't naming conventions recognized by EF Core. To make such a property the primary key, it must be annotated with the `[Key]` attribute."
      - content: "`Id` or `<entity name>Id`"
        isCorrect: true
        explanation: "`Id` or `<entity name>Id` are inferred by EF Core to be the primary key."
      - content: "`<entity name>`"
        isCorrect: false
        explanation: "`<entity name>` is more suitable as a navigation property name. To make such a property the primary key, it must be annotated with the `[Key]` attribute."
    - content: "Within the underlying EF Core architecture, the Database Provider component serves what purpose?"
      choices:
      - content: "Translates object graph changes to SQL."
        isCorrect: false
        explanation: "The EF Core Provider is the component responsible for translating object graph changes to SQL."
      - content: "Manages the connection to the database engine and executes generated SQL in the database."
        isCorrect: true
        explanation: "A Database Provider is the component responsible for managing the connection to the database engine. It also executes the generated SQL in the database."
      - content: "Represents an active connection to a database."
        isCorrect: false
        explanation: "A class deriving from `DbContext` represents an active connection to a database."
    - content: "Suppose you want to write a read-only query. How do you indicate to EF Core that object graph change tracking is unnecessary?"
      choices:
      - content: "Set the entity's state to `EntityState.Unchanged`."
        isCorrect: false
        explanation: "The entity is being tracked automatically by the `DbContext`. Manually setting the `Unchanged` state fools the `DbContext` into thinking there were no object graph changes."
      - content: "Chain the `ToListAsync()` method call to the LINQ query or fluent method chain."
        isCorrect: false
        explanation: "The `ToListAsync` method returns the result set as a `List<T>` collection."
      - content: "Chain the `AsNoTracking()` method call to the entity object."
        isCorrect: true
        explanation: "By default, change tracking is enabled for queries that return entity types."